{"version":3,"sources":["components/TodoList.tsx","components/NewTodo.tsx","App.tsx","index.tsx"],"names":["TodoList","props","items","map","todo","key","id","text","onClick","onDeleteTodo","bind","NewTodo","textInputRef","useRef","onSubmit","event","preventDefault","enteredText","current","value","onAddTodo","className","htmlFor","type","ref","App","useState","todos","setTodos","prevTodos","Math","random","toString","todoId","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRAsBeA,G,MAb2B,SAAAC,GACxC,OACE,4BACGA,EAAMC,MAAMC,KAAI,SAAAC,GAAI,OACnB,wBAAIC,IAAKD,EAAKE,IACZ,8BAAOF,EAAKG,MACZ,4BAAQC,QAASP,EAAMQ,aAAaC,KAAK,KAAMN,EAAKE,KAApD,uBCYKK,G,MAnByB,SAAAV,GACtC,IAAMW,EAAeC,iBAAyB,MAO9C,OACE,0BAAMC,SAPkB,SAACC,GACzBA,EAAMC,iBACN,IAAMC,EAAcL,EAAaM,QAASC,MAC1ClB,EAAMmB,UAAUH,KAKd,yBAAKI,UAAU,gBACb,2BAAOC,QAAQ,aAAf,oBACA,2BAAOC,KAAK,OAAOjB,GAAG,YAAYkB,IAAKZ,KAEzC,4BAAQW,KAAK,UAAb,uBCUSE,EAtBO,WAAO,IAAD,EACAC,mBAAiB,IADjB,mBACnBC,EADmB,KACZC,EADY,KAc1B,OACE,yBAAKP,UAAU,OACb,kBAAC,EAAD,CAASD,UAbU,SAACb,GACtBqB,GAAS,SAAAC,GAAS,4BACbA,GADa,CAEhB,CAAEvB,GAAIwB,KAAKC,SAASC,WAAYzB,KAAMA,WAWtC,kBAAC,EAAD,CAAUL,MAAOyB,EAAOlB,aAPF,SAACwB,GACzBL,GAAS,SAAAC,GAAS,OAAIA,EAAUK,QAAO,SAAA9B,GAAI,OAAIA,EAAKE,KAAO2B,aChB/DE,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.f5fb5d61.chunk.js","sourcesContent":["import React from 'react';\n\nimport './TodoList.css';\n\ninterface TodoListProps {\n  items: { id: string; text: string }[];\n  onDeleteTodo: (id: string) => void;\n}\n\nconst TodoList: React.FC<TodoListProps> = props => {\n  return (\n    <ul>\n      {props.items.map(todo => (\n        <li key={todo.id}>\n          <span>{todo.text}</span>\n          <button onClick={props.onDeleteTodo.bind(null, todo.id)}>削除</button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default TodoList;\n","import React, { useRef } from 'react';\n\nimport './NewTodo.css';\n\ntype NewTodoProps = {\n  onAddTodo: (todoText: string) => void;\n};\n\nconst NewTodo: React.FC<NewTodoProps> = props => {\n  const textInputRef = useRef<HTMLInputElement>(null);\n  const todoSubmitHandler = (event: React.FormEvent) => {\n    event.preventDefault();\n    const enteredText = textInputRef.current!.value;\n    props.onAddTodo(enteredText);\n  };\n\n  return (\n    <form onSubmit={todoSubmitHandler}>\n      <div className=\"form-control\">\n        <label htmlFor=\"todo-text\">Todo内容</label>\n        <input type=\"text\" id=\"todo-text\" ref={textInputRef} />\n      </div>\n      <button type=\"submit\">TODO追加</button>\n    </form>\n  );\n};\n\nexport default NewTodo;\n","import React, { useState } from 'react';\n\nimport TodoList from './components/TodoList';\nimport NewTodo from './components/NewTodo';\nimport { Todo } from './todo.model';\n\n// function App() {\n//   return <div className=\"App\"></div>;\n// }\n\nconst App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n\n  const todoAddHandler = (text: string) => {\n    setTodos(prevTodos => [\n      ...prevTodos,\n      { id: Math.random().toString(), text: text },\n    ]);\n  };\n\n  const todoDeleteHandler = (todoId: string) => {\n    setTodos(prevTodos => prevTodos.filter(todo => todo.id !== todoId))\n  }\n\n  return (\n    <div className=\"App\">\n      <NewTodo onAddTodo={todoAddHandler} />\n      <TodoList items={todos} onDeleteTodo={todoDeleteHandler} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}